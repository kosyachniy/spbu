{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from random import randint"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Задание 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n = randint(5, 10)\n",
    "n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Главная диагональ"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-2,  0,  0,  0,  0,  0,  0],\n",
       "       [ 0, -2,  0,  0,  0,  0,  0],\n",
       "       [ 0,  0, -2,  0,  0,  0,  0],\n",
       "       [ 0,  0,  0, -2,  0,  0,  0],\n",
       "       [ 0,  0,  0,  0, -2,  0,  0],\n",
       "       [ 0,  0,  0,  0,  0, -2,  0],\n",
       "       [ 0,  0,  0,  0,  0,  0, -2]], dtype=int32)"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m = np.eye(n, dtype='int32') * -2\n",
    "m"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Диагонали со сдвигом"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "# x0, x1 = np.diag_indices(n-1)\n",
    "# x1 = x1 + np.ones(n-1, dtype='int32')\n",
    "# m[(x0, x1)] = 1\n",
    "m = m + np.eye(n, n, 1, dtype='int32') + np.eye(n, n, -1, dtype='int32')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-2,  1,  0,  0,  0,  0,  1],\n",
       "       [ 1, -2,  1,  0,  0,  0,  0],\n",
       "       [ 0,  1, -2,  1,  0,  0,  0],\n",
       "       [ 0,  0,  1, -2,  1,  0,  0],\n",
       "       [ 0,  0,  0,  1, -2,  1,  0],\n",
       "       [ 0,  0,  0,  0,  1, -2,  1],\n",
       "       [ 1,  0,  0,  0,  0,  1, -2]], dtype=int32)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m[0, n-1] = m[n-1, 0] = 1\n",
    "m"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Ранг"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.linalg.matrix_rank(m)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
